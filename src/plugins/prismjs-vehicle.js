(function (Prism) {
  Prism.languages.vehicle = {
    commend: [/--(.*)($|\n)/],
    keyword: [
      /(^|\n)type\b/,
      /\bif\b/,
      /\bthen\b/,
      /\belse\b/,
      /\blet\b/,
      /\bin\b/,
      /\bforall\b/,
      /\bexists\b/,
      /\bforeach\b/,
    ],
    builtin: [
      /\bmin\b/,
      /\bmax\b/,
      /\bnil\b/,
      /\bmap\b/,
      /\bfold\b/,
      /\breduceOr\b/,
      /\breduceAnd\b/,
      /\breduceAdd\b/,
      /\breduceMul\b/,
      /\breduceMin\b/,
      /\breduceMax\b/,
    ],
    "class-name": [
      /\bType\b/,
      /\bUnit\b/,
      /\bBool\b/,
      /\bIndex\b/,
      /\bNat\b/,
      /\bReal\b/,
      /\bList\b/,
      /\bVector\b/,
      /\bTensor\b/,
      /\b[A-Z]([A-Za-z0-9]*)\b/,
    ],
    symbol: [
      /@network\b/,
      /@dataset\b/,
      /@parameter\b/,
      /@property\b/,
      /@postulate\b/,
    ],
    variable: [/\b[a-z]([A-Za-z0-9]*)\b/],
    number: [/(\d+)(\.\d+)?/],
    punctuation: [/\(/, /\)/, /\[/, /\]/, /,/],
    operator: [
      /=>/,
      /\band\b/,
      /\bor\b/,
      /\bnot\b/,
      /==/,
      /!=/,
      /<=/,
      /</,
      />=/,
      />/,
      /==./,
      /!=./,
      /<=./,
      /<./,
      />=./,
      />./,
      /\*/,
      /\//,
      /\+/,
      /-/,
      /::/,
      /!/,
    ],
  };
})(Prism);
